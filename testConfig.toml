# Details code & data to be written to memory. Defines entry/exit points.
[firmware]
	[firmware.code]
	code_addr = 0x8018 #  Generated by emulatorSetup.py
	code_size = 0x698 #  Generated by emulatorSetup.py

	[firmware.data]
	data_addr = 0x18730 #  Generated by emulatorSetup.py
	data_size = 0x43c #  Generated by emulatorSetup.py
	
	# Where firmware will begin and end execution
	[firmware.execution]
	entry		= 0x0000824c	# start of main
	end  		= 0x00008278	# end of main

# Define memory map for your MCU
[mem_map]
flash_addr = 0x0 #  Generated by emulatorSetup.py
flash_size = 0x19000 #  Generated by emulatorSetup.py

# SP, FP init to 
sram_addr 	= 0x02000000
sram_size 	= 0x00020000

	# ARM mmio map 0x40000000 - 0x5fffffff
	[mem_map.mmio]
	mmio_addr	= 0x40000000		# Hard coded. Don't change this.
	mmio_size  	= 0x20000000		# Hard coded. Don't change this.
	### TODO: ### A python script WILL use this number to generate UART modules below.
	uart_count	= 1								# Used to generate the emulators UART structs
	reg_count = 13
		
		# Map for generic uart
		# In future, a python script could generate blank keys for them, allowing the user
		# to just fill in the blanks. For now, uart is just hardcoded.
		# also, register count will be predetermined, so it's fine to use register count as a delimeter.	
		[mem_map.mmio.uart]
		uart0.base_addr = 0x40013800	# Base address for uart0
		uart0.CR1_addr	= 0x00			# CR1
		uart0.CR2_addr	= 0x04  		# CR2
		uart0.CR3_addr	= 0x08			# CR3
		uart0.CR4_addr  = 0xFFFF		# SKIP       
		uart0.CR5_addr	= 0x0c        	# BRR
		uart0.CR6_addr	= 0x10			# GTPR
		uart0.CR7_addr	= 0x14			# RTOR
		uart0.CR8_addr	= 0x18			# RQR
		uart0.CR9_addr	= 0x20			# ICR
		uart0.SR1_addr	= 0x1c			# ISR
		uart0.SR2_addr	= 0xFFFF		# SKIP
		uart0.DR1_addr	= 0x24
		uart0.DR2_addr	= 0x28
		
		uart0.CR1_reset	= 0x00
		uart0.CR2_reset	= 0x00  
		uart0.CR3_reset	= 0x00       
		uart0.CR4_reset	= 0x00			# SKIP (skipping reset value is dependent on register's corresponding address value)
		uart0.CR5_reset = 0x00        	
		uart0.CR6_reset = 0x00
		uart0.CR7_reset = 0x00
		uart0.CR8_reset	= 0x00
		uart0.CR9_reset	= 0x00
		uart0.SR1_reset	= 0x020000C0
		uart0.SR2_reset	= 0x00			# SKIP
		uart0.DR1_reset	= 0x00
		uart0.DR2_reset	= 0x00
		
		
