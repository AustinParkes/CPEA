# Details code & data to be written to memory. Defines entry/exit points.
[firmware]
	[firmware.code]
	code_addr	= 0x00008018	# .text start
	code_size	= 0xFFFF	    # .text size determined by file size at the moment

	[firmware.data]
	data_addr	= 0x00018730	# .data start
	data_size	= 0xFFFF		# .data size determined by file size at the moment
	
	[firmware.execution]
	entry		= 0x0000824c	# start of main
	end  		= 0x00008278	# end of main

# Define memory map for your MCU
[mem_map]
# mem_map.flash
flash_addr 	= 0x00000000
flash_size 	= 0x00019000

# mem_map.sram
# SP, FP init to 
sram_addr 	= 0x02000000
sram_size 	= 0x00020000

# ARM mmio map 0x40000000 - 0x5fffffff
[mmio.count]
uart_count	= 1								
gpio_count 	= 0								
	
	[mmio.uart.0.config]
	SR_count = 2
	DR_count = 2
	
	[mmio.uart.0.addr]
	base_addr 	= 0x40013800	# Base address for uart0		
	SR1_addr	= 0x1c			# ISR
	SR2_addr	= 0xFFFF		# SKIP
	DR1_addr	= 0x24			# TDR
	DR2_addr	= 0x28			# RDR
		
	[mmio.uart.0.reset]
	SR1_reset	= 0x020000C0
	SR2_reset	= 0x00			# SKIP
	DR1_reset	= 0x00
	DR2_reset	= 0x00
	
	[mmio.uart.0.flags]
	TX_data_empty = {reg = "SR1", bit = 7}
	RX_data_full  = {reg = "SR1", bit = 5}
	TX_Complete   = {reg = "SR1", bit = 6}
	RX_enable_ack = {reg = "SR1", bit = 22}
	TX_enable_ack = {reg = "SR1", bit = 21}
	
	
